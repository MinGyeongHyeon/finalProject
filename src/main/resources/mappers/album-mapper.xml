<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="Album">
  	<resultMap type="Album" id="albumResultSet">
  	<id property="alblumNo" column="ALBUM_NO"/>
  	<result property="albumTitle" column="ALBUM_TITLE"/>
  	<result property="albumContent" column="ALBUM_CONTENT"/>
  	<result property="writeDate" column="ALBUM_DATE"/>
  	<result property="classNo" column="CLASS_NO"/>
  	<result property="tumbnail" column="CHANGE_NAME"/>
  	<result property="childrenNum" column="CHILDREN_NO"/>
  	</resultMap>
  	
  	<select id="selectNum" resultType="_int">
		SELECT SEQ_ALBUM_NO.CURRVAL
		FROM DUAL
	</select>
  	
  	<insert id="insertAlbum">
		INSERT INTO Album
		VALUES(SEQ_ALBUM_NO.NEXTVAL,#{albumTitle},#{albumContent},#{writeDate},#{classNo},#{writer},'N')
	</insert>
	
	<insert id="insertAt">
		INSERT INTO ATTACHMENT VALUES(SEQ_FILE_ID.NEXTVAL , #{origineName} , #{changeName} , #{filePath} , SYSDATE , #{attachType} , #{fileLevel} ,null, #{boardNo},null,null,null,null,#{albumchildrenNo},null)
	</insert>
  
  	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM ALBUM
		WHERE CLASS_NO IN (SELECT CLASS_NO
		FROM KINDER_CLASS K
		JOIN USERS U ON U.USER_NO = K.KINDER_NO
		WHERE U.USER_NO = #{userNo})
	</select>
	
	<select id="selectList" resultMap="albumResultSet">
		SELECT A.ALBUM_NO,A.ALBUM_TITLE,A.ALBUM_DATE,A.CLASS_NO,T.CHANGE_NAME
		FROM ALBUM A
		JOIN ATTACHMENT T ON A.ALBUM_NO = T.ALBUM_NO
		WHERE A.CLASS_NO IN  (SELECT CLASS_NO
		FROM KINDER_CLASS K
		JOIN USERS U ON U.USER_NO = K.KINDER_NO
		WHERE U.USER_NO = 1)
		AND T.FILE_LEVEL = 1 
        AND A.STATUS = 'N'
		ORDER BY 1 DESC
	</select>
	
	<select id="selectTListCount" resultType="_int">
   		SELECT COUNT(*)
		FROM ALBUM
		WHERE WRITER = #{userNo}
	</select>

	<select id="selectTList" resultMap="albumResultSet">
	SELECT A.ALBUM_NO,A.ALBUM_TITLE,A.ALBUM_DATE,A.CLASS_NO,T.CHANGE_NAME
		FROM ALBUM A
		JOIN ATTACHMENT T ON A.ALBUM_NO = T.ALBUM_NO
		WHERE A.WRITER = #{userNo} 
		AND T.FILE_LEVEL = 1 
        AND A.STATUS = 'N'
		ORDER BY 1 DESC
	</select>
	
	<select id="selectCListCount" resultType="_int">
   		SELECT COUNT(*)
		FROM ALBUM
		WHERE CLASS_NO = #{userNo}
	</select>
	
	<select id="selectCList" resultMap="albumResultSet">
	SELECT A.ALBUM_NO,A.ALBUM_TITLE,A.ALBUM_DATE,A.CLASS_NO,T.CHANGE_NAME
		FROM ALBUM A
		JOIN ATTACHMENT T ON A.ALBUM_NO = T.ALBUM_NO
		WHERE CLASS_NO = #{userNo}
		AND T.FILE_LEVEL = 1 
        AND A.STATUS = 'N'
		ORDER BY 1 DESC
	</select>
	
	<select id="selectTnum" resultType="_int">
   		    SELECT C.TEACHER_NO
		    FROM KINDER_CLASS C
		    WHERE (KINDER_NO,CLASS_NAME,OPENED_DATE) IN
		    (SELECT K.KINDER_NO, K.CLASS_NAME,K.OPENED_DATE
		    FROM KINDER_CLASS K
		    WHERE  K.CHILDREN_NO =(SELECT C.CHILDREN_NO
		                FROM CHILDREN C
		                JOIN USERS U ON U.USER_NO = C.USER_NO
		            	WHERE C.CHILDREN_NO = #{userNo}))
		    AND C.DIVISION = '선생님'
	</select>
	
	
	<select id="selectDetail" resultMap="albumResultSet">
	SELECT A.ALBUM_NO,A.ALBUM_TITLE,A.ALBUM_CONTENT,A.ALBUM_DATE,A.CLASS_NO,T.CHANGE_NAME,T.CHILDREN_NO
		FROM ALBUM A
		JOIN ATTACHMENT T ON A.ALBUM_NO = T.ALBUM_NO
		WHERE A. ALBUM_NO = #{bid}
		ORDER BY 1 DESC
	</select>
	
	<select id="selectName" resultType="java.lang.String">
	SELECT CHILDREN_NAME
    FROM CHILDREN
    WHERE CHILDREN_NO = #{name}
	</select>
	
	<select id="selectSome" resultType="_int">
	  SELECT CHILDREN_NO
	  FROM CHILDREN
      WHERE CHILDREN_NAME = #{albumContent}
	</select>
	
	<select id="selectSearchDetail" resultMap="albumResultSet">
		SELECT A.ALBUM_NO,A.ALBUM_TITLE,A.ALBUM_CONTENT,A.ALBUM_DATE,A.CLASS_NO,T.CHANGE_NAME,T.CHILDREN_NO
		FROM ALBUM A
		JOIN ATTACHMENT T ON A.ALBUM_NO = T.ALBUM_NO
		WHERE T.CHILDREN_NO  LIKE '%'||#{alblumNo}||'%'
		 AND T.ALBUM_NO = #{writer}
		ORDER BY 1 DESC
	</select>
  </mapper>
  